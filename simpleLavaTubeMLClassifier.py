from sklearn import tree
# features = accelerometer(analog), reed(digital), photoresistor(analog),temperature(analog) 
features = [[7,1,130,72],[-7,1,130,72],[7,1,130,94],[-7,1,32,94],[1,1,130,70],[-1,1,130,80],[-1,1,120,60],[1,1,90,72],[1,1,30,60],[-1,1,130,93],[5,1,60,120],[1,1,130,80],[1,1,20,70],[-1,1,20,70],[-7,1,20,80],[-5,1,10,70],[5,1,8,70],[9,1,20,70],[7,0,130,72],[-7,0,130,72],[7,0,130,94],[-7,0,32,94],[1,0,130,70],[-1,0,130,80],[-1,0,120,60],[1,0,90,72],[1,0,30,60],[-1,0,130,93],[5,0,60,120],[1,0,130,80],[1,0,20,70],[-1,0,20,70],[-7,0,20,80],[-5,0,10,70],[5,0,8,70],[9,0,20,70],[0,0,250,20],[0,0,230,20],[2,0,250,20],[0,0,250,80],[3,0,250,20],[-2,0,250,20],[0,0,5,60]]
labels =[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0]
clf = tree.DecisionTreeClassifier()
clf = clf.fit(features,labels)
print(clf.predict([[-2,1,60,72]]))

